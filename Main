/*
Project: Lab 9 Pizza Shop Ordering System
Purpose Details: A text based pizza shop order handling system: show a menu, handle an order with menu items, and accept the transaction payment
Course: IST 242
Author: Elyse Swider
Date Developed: 6/13/2020
Last Date Changed: 6/14/2020
Revision: 1
*/
package edu.psu.abington.ist.ist242;

import javax.xml.bind.annotation.XmlList;
import java.util.ArrayList;
import java.util.Scanner;

public class Main {
    int cCount = 1;

    public static void main(String[] args) {

        Main main = new Main();

        final char EXIT_CODE = 'E';
        final char CUST_CODE = 'C';
        final char MENU_CODE = 'M';
        final char ORDE_CODE = 'O';
        final char TRAN_CODE = 'T';
        final char CUST_PRNT = 'P';
        final char HELP_CODE = '?';
        char userAction;
        final String PROMPT_ACTION = "Add 'C'ustomer, 'P'rint Customer, List 'M'enu, Add 'O'rder, List 'T'ransaction or 'E'xit: ";
        ArrayList<Customer> cList = new ArrayList<>();
        ArrayList<Menu> mList = new ArrayList<>();
        ArrayList<Order> oList = new ArrayList<>();
        ArrayList<Transaction> tList = new ArrayList<>();


        Menu menu1 = new Menu(1, "1 for Plain");
        Menu menu2 = new Menu(2, "2 for Meat");
        Menu menu3 = new Menu(3, "3 for Extra");
        Menu menu4 = new Menu(4, "4 for Veg");

        mList.add(menu1);
        mList.add(menu2);
        mList.add(menu3);
        mList.add(menu4);


        userAction = getAction(PROMPT_ACTION);

        while (userAction != EXIT_CODE) {
            switch (userAction) {
                case CUST_CODE: cList.add(main.addCustomer());
                    break;
                case CUST_PRNT: Customer.printCustomer(cList);
                    break;
                case MENU_CODE: Menu.listMenu(mList);
                    break;
                case ORDE_CODE: oList.add(main.addOrder());
                    break;
                case TRAN_CODE: main.addTransaction(oList);
                    break;
            }

            userAction = getAction(PROMPT_ACTION);
        }
    }

    public static char getAction(String prompt) {
        Scanner scnr = new Scanner(System.in);
        String answer = "";
        System.out.println(prompt);
        answer = scnr.nextLine().toUpperCase() + " ";
        char firstChar = answer.charAt(0);
        return firstChar;
    }

    public Customer addCustomer() {
        Customer cust = new Customer(cCount++);
        Scanner scnr = new Scanner(System.in);
        System.out.println("Please Enter your Name: ");
        cust.setCustomerName(scnr.nextLine());
        System.out.println("Please Enter your Phone: ");
        cust.setCustomerPhoneNumber(scnr.nextLine());
        return cust;
    }
     public Order addOrder(){
         Order ord = new Order(cCount++);
         Scanner scr = new Scanner(System.in);
         System.out.println("Choose a type of pizza from the menu: ");
         ord.setorderId(Integer.parseInt(scr.nextLine()));
         return ord;
        }
     public Transaction addTransaction(ArrayList<Order> oList ){
        Transaction tran = new Transaction(oList,);
        Scanner sc = new Scanner(System.in);
        System.out.println("Choose a Payment Type: 'ca' for Cash or 'cr' for Credit: ");
        tran.setPaymentType(PaymentType.valueOf(sc.nextLine()));
        return tran;
     }
    }

